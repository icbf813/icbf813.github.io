{"link_diff":"https://github.com/FasterXML/jackson-core/compare/383f63242c59628d7bcef15a73eb1c9d44d7fb56..3c2c9610b6c76e2b348eb057d0a8268681d573a6","language":"java","hunk":"diff --git a/src/main/java/com/fasterxml/jackson/core/io/IOContext.java b/src/main/java/com/fasterxml/jackson/core/io/IOContext.java\nindex a4675be20c..18f50c8eda 100644\n--- a/src/main/java/com/fasterxml/jackson/core/io/IOContext.java\n+++ b/src/main/java/com/fasterxml/jackson/core/io/IOContext.java\n@@ -270,12 +270,17 @@ protected final void _verifyAlloc(Object buffer) {\n     }\n \n     protected final void _verifyRelease(byte[] toRelease, byte[] src) {\n-        if ((toRelease != src) && (toRelease.length <= src.length)) { throw wrongBuf(); }\n+        // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n+        if ((toRelease != src) && (toRelease.length < src.length)) { throw wrongBuf(); }\n     }\n \n     protected final void _verifyRelease(char[] toRelease, char[] src) {\n-        if ((toRelease != src) && (toRelease.length <= src.length)) { throw wrongBuf(); }\n+        // 07-Mar-2016, tatu: As per [core#255], only prevent shrinking of buffer\n+        if ((toRelease != src) && (toRelease.length < src.length)) { throw wrongBuf(); }\n     }\n \n-    private IllegalArgumentException wrongBuf() { return new IllegalArgumentException(\"Trying to release buffer not owned by the context\"); }\n+    private IllegalArgumentException wrongBuf() {\n+        // sanity check failed; trying to return different, smaller buffer.\n+        return new IllegalArgumentException(\"Trying to release buffer smaller than original\");\n+    }\n }"}
