{"argument_list_java":{"language":"java","construct_name":"argument_list","source":"(argument_list (_)* @args)","construct":"(argument_list argument: @args)"},"argument_list_python":{"language":"python","construct_name":"argument_list","source":"(argument_list (_)* @args)","construct":"(argument_list argument: @args)"},"array_access_java":{"language":"java","construct_name":"array_access","source":"(array_access array: (_) @array index: (_) @index)","construct":"(array_access array: @array index: @index)"},"array_access_python":{"source":"(subscript value: (_) @array subscript: (_) @index)","construct":"(array_access array: @array index: @index)"},"assignment_expression_java":{"language":"java","construct_name":"assignment_expression","source":"(assignment_expression left: (_) @left right: (_) @right)","construct":"(assignment_expression\n  left: @left\n  right: @right)"},"assignment_expression_python":{"language":"python","construct_name":"assignment_expression","source":"(assignment left: (_) @left right: (_) @right)","construct":"(assignment_expression\n  left: @left\n  right: @right)"},"binary_expression_java":{"language":"java","construct_name":"binary_expression","source":"(binary_expression left: (_) @left operator: (_) @operator right: (_) @right)","construct":"(assignment_expression\n  left: @left\n  operator: @operator\n  right: @right)"},"binary_expression_python":{"language":"python","construct_name":"binary_expression","source":"(comparison_operator left: (_) @left operator: (_) @operator right: (_) @right)","construct":"(assignment_expression\n  left: @left\n  operator: @operator\n  right: @right)"},"call_java":{"language":"java","construct_name":"call","source":"(method_invocation name: (_) @func arguments: argument_list @args)","construct":"(call\n  func: @func\n  arguments: @args)"},"conditional_instruction_java":{"language":"java","construct_name":"conditional_instruction","source":"(if_statement condition: (_) @condition consequence: (_) @consequence alternative: (_) @alternative)","construct":"(conditional_instruction\n  condition: @condition\n  then_part: @consequence\n  else_part: @alternative)"},"equal_java":{"language":"java","construct_name":"equal","source":"(\"==\")","construct":"(equal)"},"false_java":{"language":"java","construct_name":false,"source":"(false)","construct":"(false)"},"false_python":{"language":"python","construct_name":false,"source":"(false)","construct":"(false)"},"field_access_java":{"language":"java","construct_name":"field_access","source":"(method_invocation object: @obj name: (_) @field arguments: argument_list @args)","construct":"(field_access\n  object: @obj\n  field: @field\n  arguments: @args)"},"field_access_python":{"language":"python","construct_name":"field_access","source":"(call object: @obj name: (_) @field arguments: argument_list @args)","construct":"(field_access\n  object: @obj\n  field: @field\n  arguments: @args)"},"for_statement_java":{"language":"java","construct_name":"for_statement","source":"(for_statement init: (_) @init condition: (_) @condition update: (_) @update body: (_) @body)","construct":"(for_statement\n  init: @init\n  condition: @condition\n  update: @update\n  body: @body)"},"greater_equal_java":{"language":"java","construct_name":"greater_equal","source":"(\">=\")","construct":"(greater_equal)"},"greater_java":{"language":"java","construct_name":"greater","source":"(\">\")","construct":"(greater)"},"identifier_java":{"language":"java","construct_name":"indentifier","source":"(identifier)","construct":"(identifier)"},"integer_java":{"language":"java","construct_name":"integer","source":"(decimal_integer_literal)","construct":"(integer)"},"integer_python":{"language":"python","construct_name":"integer","source":"(integer)","construct":"(integer)"},"less_equal_java":{"language":"java","construct_name":"less_equal","source":"(\"<=\")","construct":"(less_equal)"},"less_java":{"language":"java","construct_name":"less","source":"(\"<\")","construct":"(less)"},"not_equal_java":{"language":"java","construct_name":"less","source":"(\"!=\")","construct":"(not_equal)"},"null_java":{"language":"java","construct_name":null,"source":"(null_literal)","construct":"(null)"},"return_statement_java":{"language":"java","construct_name":"return_statement","source":"(return_statement (_) @value)","construct":"(return_statement\n  value: @value)"},"string_java":{"language":"java","construct_name":"string","source":"(string_literal)","construct":"(string)"},"true_java":{"language":"java","construct_name":true,"source":"(true)","construct":"(true)"},"true_python":{"language":"python","construct_name":true,"source":"(true)","construct":"(true)"}}
